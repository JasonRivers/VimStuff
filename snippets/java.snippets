snippet main
	public static void main(String[] args) {
		${1}
	}
snippet pu
	public ${1}
snippet po
	protected ${1}
snippet pr
	private ${1}
snippet st
	static ${1}
snippet fi
	final ${1}
snippet ab
	abstract ${1}
snippet re
	return ${1}
snippet br
	break;${1}
snippet de
	default:
		${1}
		break;
snippet ca
	catch (${1:Exception} ${2:e}) {
		${3}
	}
snippet th
	throw new ${1}();
snippet sy
	synchronized ${1}
snippet im
	import ${1}
snippet if
	if (${1}) {
		${2}
	}
snippet el
	else {
		${1}
	}
snippet elif
	else if (${1}) {
		${2}
	}
snippet wh
	while (${1}) {
		${2}
	}
snippet for
	for (int ${1:i} = 0; $1 < ${2:n}; $1++) {
		${3}
	}
snippet fore
	for (${1} : ${2}) {
		${3}
	}
snippet sw
	switch (${1}) {
		${2}
	}
snippet cs
	case ${1}:
		${2}
		break;
snippet tc
	public class ${1:`Filename()`} extends ${2:TestCase}
snippet t
	public void test${1:Name}() throws Exception ${2}
snippet cl
	public final class ${1:`Filename("", "untitled")`} {
		${2}
	}
snippet in
	interface ${1:`Filename("", "untitled")`} ${2:extends Parent}${3}
snippet m
	${1:void} ${2:method}(${3}) ${4:throws }${5}
snippet v
	${1:String} ${2:var}${3: = null}${4};${5}
snippet co
	static public final ${1:String} ${2:var} = ${3};${4}
snippet cos
	static public final String ${1:var} = "${2}";${3}
snippet as
	assert ${1:test} : "${2:Failure message}";${3}
snippet s
	String${1}
snippet o
	Object${1}
snippet p
	System.out.println(${1});
snippet pv
	System.out.println("${1} = " + ${1});
snippet err
	System.err.println(${1});
